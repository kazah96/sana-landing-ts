{"ast":null,"code":"var _jsxFileName = \"/home/tema/projects/sana-landing-ts/client/components/seo/index.tsx\";\nvar __jsx = React.createElement;\n\n/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title\n}) {\n  const site = {\n    siteMetadata: {\n      description: \"sdfsdf\",\n      title: \"sdfsdf\",\n      author: \"dfssdf\"\n    }\n  };\n  const metaDescription = description || site.siteMetadata.description;\n  return __jsx(Helmet, {\n    htmlAttributes: {\n      lang\n    },\n    title: title,\n    titleTemplate: `%s | ${site.siteMetadata.title}`,\n    meta: [{\n      name: `description`,\n      content: metaDescription\n    }, {\n      property: `og:title`,\n      content: title\n    }, {\n      property: `og:description`,\n      content: metaDescription\n    }, {\n      property: `og:type`,\n      content: `website`\n    }, {\n      name: `twitter:card`,\n      content: `summary`\n    }, {\n      name: `twitter:creator`,\n      content: site.siteMetadata.author\n    }, {\n      name: `twitter:title`,\n      content: title\n    }, {\n      name: `twitter:description`,\n      content: metaDescription\n    }].concat(meta),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\nexport default SEO;","map":{"version":3,"sources":["/home/tema/projects/sana-landing-ts/client/components/seo/index.tsx"],"names":["React","PropTypes","Helmet","SEO","description","lang","meta","title","site","siteMetadata","author","metaDescription","name","content","property","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"mappings":";;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA;AAA3B,CAAb,EAAiD;AAC/C,QAAMC,IAAI,GAAG;AACXC,IAAAA,YAAY,EAAE;AACZL,MAAAA,WAAW,EAAE,QADD;AAEZG,MAAAA,KAAK,EAAE,QAFK;AAGZG,MAAAA,MAAM,EAAE;AAHI;AADH,GAAb;AAOA,QAAMC,eAAe,GAAGP,WAAW,IAAII,IAAI,CAACC,YAAL,CAAkBL,WAAzD;AAEA,SACE,MAAC,MAAD;AACE,IAAA,cAAc,EAAE;AACdC,MAAAA;AADc,KADlB;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,aAAa,EAAG,QAAOC,IAAI,CAACC,YAAL,CAAkBF,KAAM,EALjD;AAME,IAAA,IAAI,EAAE,CACJ;AACEK,MAAAA,IAAI,EAAG,aADT;AAEEC,MAAAA,OAAO,EAAEF;AAFX,KADI,EAKJ;AACEG,MAAAA,QAAQ,EAAG,UADb;AAEED,MAAAA,OAAO,EAAEN;AAFX,KALI,EASJ;AACEO,MAAAA,QAAQ,EAAG,gBADb;AAEED,MAAAA,OAAO,EAAEF;AAFX,KATI,EAaJ;AACEG,MAAAA,QAAQ,EAAG,SADb;AAEED,MAAAA,OAAO,EAAG;AAFZ,KAbI,EAiBJ;AACED,MAAAA,IAAI,EAAG,cADT;AAEEC,MAAAA,OAAO,EAAG;AAFZ,KAjBI,EAqBJ;AACED,MAAAA,IAAI,EAAG,iBADT;AAEEC,MAAAA,OAAO,EAAEL,IAAI,CAACC,YAAL,CAAkBC;AAF7B,KArBI,EAyBJ;AACEE,MAAAA,IAAI,EAAG,eADT;AAEEC,MAAAA,OAAO,EAAEN;AAFX,KAzBI,EA6BJ;AACEK,MAAAA,IAAI,EAAG,qBADT;AAEEC,MAAAA,OAAO,EAAEF;AAFX,KA7BI,EAiCJI,MAjCI,CAiCGT,IAjCH,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA2CD;;AAEDH,GAAG,CAACa,YAAJ,GAAmB;AACjBX,EAAAA,IAAI,EAAG,IADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBF,EAAAA,WAAW,EAAG;AAHG,CAAnB;AAMAD,GAAG,CAACc,SAAJ,GAAgB;AACdb,EAAAA,WAAW,EAAEH,SAAS,CAACiB,MADT;AAEdb,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAFF;AAGdZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,CAHQ;AAIdb,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBG;AAJV,CAAhB;AAOA,eAAelB,GAAf","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\n\nfunction SEO({ description, lang, meta, title }) {\n  const site = {\n    siteMetadata: {\n      description: \"sdfsdf\",\n      title: \"sdfsdf\",\n      author: \"dfssdf\"\n    }\n  }\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"]},"metadata":{},"sourceType":"module"}